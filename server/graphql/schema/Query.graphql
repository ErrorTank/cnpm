
type registerOuputType {
    message: String
}

type loginOutputType {
    user: User!
    token: String!
}

type User implements Node{
    _id: ID!
    fullname: String!
    email: String!
    phone: String
    password: String
    gender: Boolean
    dob: String
    subscribe: Boolean
    updatedAt: String!
    createdAt: String!
    role: Int!
    isVerify: Boolean!
    picture: String
    social: Social
}


type Query {
    getAuthenUser: User
    checkConfirm(token: String!): loginOutputType
    getSocialUserInfo(socialID: String!): loginOutputType
    regularLogin(payload: RegularLoginInput!): loginOutputType
}

